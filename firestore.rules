rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }

    // Loadouts collection
    match /loadouts/{loadoutId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (
        // Allow owner to update their loadout
        request.auth.uid == resource.data.userId ||
        // Allow any authenticated user to update likes count
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes'])
      );
      allow delete: if isSignedIn() && request.auth.uid == resource.data.userId;
    }

    // Users collection and subcollections
    match /users/{userId} {
      allow read: if true;
      // Allow updates to totalLikes field by any authenticated user
      allow update: if isSignedIn() && (
        request.auth.uid == userId ||
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['totalLikes', 'lastUpdated'])
      );
      // Allow other writes only by the user
      allow create, delete: if isSignedIn() && request.auth.uid == userId;

      // Allow access to likes subcollection
      match /likes/{likeId} {
        allow read: if true;
        allow create, delete: if isSignedIn() && request.auth.uid == userId;
      }
    }

    // Stats collection
    match /stats/global {
      allow read: if true;
      allow write: if isSignedIn();
    }

    // Allow collection group query for likes
    match /{path=**}/likes/{likeId} {
      allow read: if true;
      allow create, delete: if isSignedIn() && request.auth.uid == path[1];
    }
  }
} 